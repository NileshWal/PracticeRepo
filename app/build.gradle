plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

def versionMajor = 0
def versionMinor = 0
def versionPatch = 0
def versionBuild = 1

android {
    namespace 'com.example.practiceapps'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.practiceapps"
        minSdk 27
        targetSdk 34
        versionCode versionMajor * 1000 + versionMinor * 100 + versionPatch * 10 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}.${versionBuild}"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.0"
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        viewBinding = true
        compose true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Networking
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'org.conscrypt:conscrypt-android:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.google.code.gson:gson:2.9.0'

    implementation 'androidx.activity:activity-ktx:1.7.2'

    //Coroutine Lifecycle Scope
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'

    // Android Room Database Library
    implementation 'androidx.room:room-runtime:2.5.2'
    implementation 'androidx.room:room-ktx:2.5.2'
    // To use Kotlin annotation processing tool (kapt)
    kapt 'androidx.room:room-compiler:2.5.2'

    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.1'

    //Glide - non Compose
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    //HILT
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    //Jetpack Compose
    implementation 'androidx.compose.material:material:1.5.0'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation 'androidx.fragment:fragment-ktx:1.6.1'
    implementation 'androidx.compose.ui:ui-tooling:1.5.0'

    //Accompanist (Permission) for Jetpack Compose
    implementation 'com.google.accompanist:accompanist-permissions:0.30.1'
    //Glide - Compose
    /*implementation 'com.github.bumptech.glide:compose:1.0.0-alpha.1'*/

    //Google Services & Maps
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.maps.android:maps-compose:2.14.0'
    // Optionally, you can include the Compose utils library for Clustering, etc.
    implementation 'com.google.maps.android:maps-compose-utils:2.14.0'
    implementation 'com.google.android.gms:play-services-location:21.0.1'

    //Unit Tests - JUnit4
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'

    //Unit Tests - Mockito
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:2.25.0'
    testImplementation 'org.mockito:mockito-inline:2.13.0'

}